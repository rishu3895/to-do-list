(()=>{"use strict";const e=()=>({myHeading:(e,n)=>{const t=document.createElement("h3");return t.innerHTML=n,t.classList=e,{heading1:t}},myInput:(e,n,t)=>{const o=document.createElement("input");return o.type=e,o.placeholder=n,o.classList=t,{input1:o}},myButton:(e,n)=>{const t=document.createElement("button");return t.innerHTML=n,t.classList=e,{myButton:t}},myDiv:(e,n)=>{const t=document.createElement("div");return t.classList=e,t.innerHTML=n,{myDiv:t}},myIcon:e=>{const n=document.createElement("i");return n.classList=e,{myIcon:n}}});const n=document.querySelector(".content"),t=function(){const n=e().myDiv("nav-bar-class","").myDiv,t=e().myHeading("nav-heading-class","").heading1;if(n.appendChild(t),localStorage.getItem("name"))t.innerHTML=`Welcome ${localStorage.getItem("name")}`;else{const e=prompt("Enter your name");localStorage.setItem("name",e),console.log("phle se naam nahi hai"),t.innerHTML=`welcome ${e}`}return n}(),o=function(){const n=e().myDiv("quote-author-class","").myDiv,t=e().myDiv("quote-class","").myDiv,o=e().myDiv("author-class","").myDiv;return n.appendChild(t),n.appendChild(o),async function(){try{const e=await fetch("https://api.quotable.io/random");if(!e.ok)throw e.statusText;const n=await e.json();t.innerHTML=n.content,o.innerHTML=`-${n.author}`}catch(e){console.log(e),alert("sorry could not find out a new quote hope you are doing well")}}(),n}(),i=e().myDiv("quote-author-class-class","").myDiv;i.appendChild(o),t.appendChild(i),n.appendChild(t),console.log(o);const a=function(){const n=e().myDiv("lower-body","").myDiv,t=e().myDiv("lower-left-body","").myDiv,o=e().myDiv("lower-right-body","").myDiv;return function(n){const t=e().myDiv("heading-lower-left-icon","").myDiv,o=e().myHeading("heading-lower-left","Projects").heading1,i=e().myIcon("fas fa-plus").myIcon;t.appendChild(o),t.appendChild(i),n.appendChild(t);let a=!1;const c=e().myDiv("new-project-div","").myDiv;i.addEventListener("click",(()=>{if(!a){const n=function(){const n=e().myInput("text","Enter the name of the project","input-project-name-class").input1;return n.autofocus=!0,n}();c.appendChild(n),n.addEventListener("keyup",(e=>{var t;13==e.keyCode&&(t=n.value,console.log(t))}))}a=!0})),n.appendChild(c)}(t),n.appendChild(t),n.appendChild(o),n}();n.appendChild(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,